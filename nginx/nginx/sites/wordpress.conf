server {
        listen          0.0.0.0:8080;

        server_name     wordpress;
        root            /var/www/html/wordpress;
        index           index.php;

        access_log      /var/log/nginx/nginx_access.log;
        error_log       /var/log/nginx/nginx_error.log;

        gzip_static on;
        
        client_max_body_size 100M;

        # Original formula Drupal code protection as per .htaccess
        location ~ \.(engine|inc|info|install|make|module|profile|test|po|sh|.*sql|theme|tpl(\.php)?|xtmpl)$|^(\..*|Entries.*|Repository|Root|Tag|Template)$ {
          return 403;
        }

        # Protect /private (for private code)
        location ~ ^/private/ {
          return 403;
        }
        # Protect /sites/default/files/private (for private files)
        location ~ ^/sites/default/files/private/ {
          return 403;
        }
        # Protect /sites/default/config (for staging configuration)
        location ~ ^/sites/default/config/ {
          return 403;
        }
        # Protect /sites/default/files/config (for active configuration)
        location ~ ^/sites/default/files/config/ {
          return 403;
        }

        # Try site errors, then pantheon errors
        location ~ ^/(504|403|502|php_in_valhalla|locked|maintenance|styx_ssl_error)\.html$ {
          add_header Cache-Control max-age=5;
          try_files $uri /error_pages/$uri;
        }

        location ~ /sites/default/files/.*\.php$ {
          error_page 403 /php_in_valhalla.html;
          return 403;
        }

        # Web fonts support.
        location ~* \.(eot|ttf|woff|otf|svg)$ {
          add_header    Access-Control-Allow-Origin *;  # Firefox needs this.

          try_files $uri $uri/ @cleanurl;

          expires       1w;
          log_not_found off;
        }

        # Support for .svgz
        location ~* \.(svgz)$ {
          try_files $uri $uri/ @cleanurl;

          expires       1w;

          add_header    Content-encoding gzip;  # So browsers will gunzip
        }

        # Set the expiration for assets to 1 day, except in dev.
        # This could be done with an 'if' in the '/' location, but the
        # http://wiki.nginx.org/IfIsEvil page scared me.
        location ~ \.(js|JS|css|CSS|png|PNG|jpg|JPG|jpeg|JPEG|gif|GIF|ico|ICO|txt|TXT|xml)$ {
          try_files $uri $uri/ @cleanurl;

          expires          1w;
          log_not_found    off;
        }

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }
 
        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        location / {
            try_files $uri $uri/ @cleanurl;
        }
 
        location @cleanurl {
            rewrite ^/(.*)$ /index.php?q=$1 last;
        }

        location ~ \.php$ {
                try_files $uri $uri/ @cleanurl;
                
                fastcgi_pass unix:/var/run/php5-fpm.sock;
                # fastcgi_pass 127.0.0.1:7777;
                
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;

                # Pantheon extra conf
                fastcgi_intercept_errors on;
                # Set the REMOTE_ADDR as the client IP so as to not confuse drupal.
                # x-pantheon-client-ip comes from styx but will be missing
                # if requests come directly to nginx
                # @todo check Varnish forwarded_for IP and assign it to this variable.
                fastcgi_param REMOTE_ADDR $http_x_pantheon_client_ip;
                
        }
}
